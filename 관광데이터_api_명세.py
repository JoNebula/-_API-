# -*- coding: utf-8 -*-
"""관광데이터_API_명세.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PBUfY2UWPeQeFV8VwmeZ1cGoQxUJT912

# SetUP
"""

!pip install requests
!pip install bs4

import requests
import time
import pandas as pd
import numpy as np
from bs4 import BeautifulSoup
import urllib

key = "J%2FMF%2FFZu79F5m8IclqQvnPX3FEnkqzmgeDwH38xvKaB49HL3PrZ91d5TE0qApitoEBHy%2F5wfhDKhDXJlYVOlQA%3D%3D"

"""# 1) 국문 관광정보 서비스 API

Request 파라미터

#arrange: (A=제목순, C=수정일순 , D=생성일순) 대표이미지가반드시있는정렬 (O=제목순, Q=수정일순, R=생성일순)

params = {
    "arrange": , #정렬구분
    "contentTypeid": , #콘텐츠타입구분
    "areaCode": , #지역구분
    "sigunguCode": , #시군구구분 (areaCode 반드시 필요)
    "cat1": , #대분류1
    "cat2": , #대분류2
    "cat3": , #대분류3
    "modifiedtime":  ,#콘텐츠수정일
    "mapX": ,#WGS84 GPS 경도
    "mapY: ,#WGS84 GPS 위도
    "radius": ,#거리반경(m단위)
    }

1-1) areaCode1 : 지역코드조회
"""

# 지역 별 code 조회 기능
service = "areaCode1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&numOfRows=10&pageNo=1&MobileOS=ETC&MobileApp=TestApp&_type=json"

res = requests.get(url)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-2) categoryCode1 : 서비스분류코드조회"""

# 장소 분류 카테고리 code 조회 기능
service = "categoryCode1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&numOfRows=10&pageNo=1&MobileOS=ETC&MobileApp=TestApp&_type=json"

res = requests.get(url)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-3) areaBasedList1 : 지역기반관광정보조회"""

# 장소별 종합정보 조회 기능(위치, 상호, 위경도 좌표, 카테고리 등)
service = "areaBasedList1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&numOfRows=10&pageNo=1&MobileOS=ETC&MobileApp=TestApp&_type=json"

res = requests.get(url)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-4) locationBasedList1 : 위치기반관광정보조회"""

# 위/경도 좌표 및 거리반경 기반 관광정보 조회 / 예외처리 필요(반경 내 존재X 가능)
service = "locationBasedList1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&numOfRows=10&pageNo=1&MobileOS=ETC&MobileApp=TestApp&_type=json"

params = {
    "mapX":127.12,
    "mapY":36.45,
    "radius":30000
}

res = requests.get(url,params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-5) searchKeyword1 : 키워드검색조회"""

# 키워드 기반 관광정보 조회 / 예외처리 필요(존재X 가능), 키워드: 인코딩 없이 한글로 기입(장소 키워드인듯)
service = "searchKeyword1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

word = "청주"

params = {
    "keyword":word,
}

res = requests.get(url,params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-6) searchFestival1 : 행사정보조회"""

# 날짜 기반 행사정보 조회 / 예외처리 필요(존재X 가능)
service = "searchFestival1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

date = "20240605" #YYYYMMDD 형태

params = {
    "eventStartDate":date
}

res = requests.get(url,params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-7) searchStay1 : 숙박정보조회"""

# 숙박정보목록 조회
service = "searchStay1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

res = requests.get(url)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-8) detailCommon1 : 공통정보조회(상세정보1)"""

# 공통정보조회(상세정보1) : contentId 필수
service = "detailCommon1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

params = {
    "contentId":"126508",
    "defaultYN":"Y", #기본정보조회
    "firstImageYN":"Y", #대표이미지조회
    "areacodeYN":"Y", #지역코드조회
    "catcodeYN":"Y", #카테고리조회
    "addrinfoYN":"Y", #주소조회
    "mapinfoYN":"Y", #좌표X,Y조회
    "overviewYN":"Y" #콘텐츠개요조회
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-9) detailIntro1 : 소개정보조회(상세정보2)"""

# 소개정보조회(상세정보2) : contentId, contentTypeId 필수 / contentType 따라 response 값들이 달라짐.
service = "detailIntro1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

params = {
    "contentId":"2674675",
    "contentTypeId":"15"
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-10) detailInfo1 : 반복정보조회(상세정보3)"""

# 반복정보조회(상세정보3) : contentId, contentTypeId 필수 / 숙박=객실정보, 여행코스=코스정보 제공 / contentTypeId 따라 response 달라짐
service = "detailInfo1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

params = {
    "contentId":"2674675",
    "contentTypeId":"15"
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-11) detailImage1 : 이미지정보조회(상세정보4)"""

# 이미지정보조회(상세정보4) : imageYN, subImageYN로 이미지 정보 받기 / cpyrthDivCd: Type1(저작권 제1유형, 출처표시권장), Type3(1유형+변경금지)
# originalimgurl : 원본이미지, smallimageurl : 썸네일 이미지
service = "detailImage1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

params = {
    "contentId":"1095732",
    "imageYN":"Y",
    "subImageYN":"Y"
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""1-12) areaBasedSyncList1 : 국문관광정보 동기화목록조회"""

# 국문관광정보 동기화목록조회 / showflag : 컨텐츠 표출 여부, 0 or 1을 parameter로 넣어 해당 값과 동일한 결과만 받을 수 있음 << 종합적인 정보 다 때려넣은듯?

service = "areaBasedSyncList1"
url = f"http://apis.data.go.kr/B551011/KorService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""# 2) 관광빅데이터 API

2-1) metcoRegnVisitrDDList : 광역지자체 방문자수
"""

# 관광데이터(방문자수) 조회
# startYmd:조회 시작연월일, endYmd:조회 끝연월일은 필수
service = "metcoRegnVisitrDDList"
url = f"http://apis.data.go.kr/B551011/DataLabService/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

params = {
    "startYmd":"20210513",
    "endYmd":"20210516"
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""2-2) locgoRegnVisitrDDList : 기초지자체 방문자수"""

# 관광데이터(방문자수) 조회
# startYmd:조회 시작연월일, endYmd:조회 끝연월일은 필수
service = "locgoRegnVisitrDDList"
url = f"http://apis.data.go.kr/B551011/DataLabService/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

params = {
    "startYmd":"20210513",
    "endYmd":"20210516"
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""# 3) 생태관광 정보활용 API

3-1) areaCode1 : 지역코드조회
"""

# 관광데이터(방문자수) 조회
# startYmd:조회 시작연월일, endYmd:조회 끝연월일은 필수

# *** 1)에서와 3)에서 지역코드는 완전히 동일함. (검증완료)

service = "areaCode1"
url = f"http://apis.data.go.kr/B551011/GreenTourService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

res = requests.get(url)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""3-2) areaBasedList1 : 지역기반생태관광정보조회"""

# 지역기반생태관광정보 / areaCode, sigunguCode 파라미터 사용 가능
service = "areaBasedList1"
url = f"http://apis.data.go.kr/B551011/GreenTourService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

res = requests.get(url)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""3-3) areaBasedSyncList1 : 생태관광정보동기화조회"""

# 생태관광정보동기화조회 / showflag(표출여부), modifiedtime(수정일), areaCode(지역코드), sigunguCode(시군구코드) 파라미터 사용 가능
service = "areaBasedSyncList1"
url = f"http://apis.data.go.kr/B551011/GreenTourService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&_type=json"

res = requests.get(url)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""# 4) 관광사진갤러리 API

4-1) galleryList1 : 관광사진갤러리 목록 조회
"""

# 관광사진갤러리 목록 조회 / arrange(A:촬영일, B:제목, C:수정일) parameter 사용 가능 / galSearchKeyword : 검색 키워드
service = "galleryList1"
url = f"http://apis.data.go.kr/B551011/PhotoGalleryService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=3&_type=json"

res = requests.get(url)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""4-2) gallerySearchList1 : 관광갤러리 키워드검색 목록조회"""

# 관광사진갤러리 키워드검색 목록 조회 / arrange(A:촬영일, B:제목, C:수정일) parameter 사용 가능 / keyword : 검색 키워드
service = "gallerySearchList1"
url = f"http://apis.data.go.kr/B551011/PhotoGalleryService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=3&_type=json"

params = {
    "keyword" : "동물"
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""4-3) galleryDetailList1 : 관광사진갤러리 상세목록 조회"""

# 관광사진갤러리 상세 목록 조회 / arrange(A:촬영일, B:제목, C:수정일) parameter 사용 가능 / title : 제목
service = "galleryDetailList1"
url = f"http://apis.data.go.kr/B551011/PhotoGalleryService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=3&_type=json"

params = {
    "title" : "청계천 야경"
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""4-4) gallerySyncDetailList1 : 관광사진정보 동기화 조회"""

# 관광사진정보 동기화 조회 / galUseFlag(콘텐츠표출여부), galModifiedTime(콘텐츠변경일자) parameter 사용 가능
service = "gallerySyncDetailList1"
url = f"http://apis.data.go.kr/B551011/PhotoGalleryService1/{service}?serviceKey={key}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=3&_type=json"

params = {
    "title" : "청계천 야경"
}

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""# 5) 공공데이터 Portal

5-1) 기상청 : 단기 예보 조회(구_동네예보) API
"""

# 초단기실황 조회 API / base_date(YYYYMMDD), base_time(정시단위, 매시각 40분 이후 호출 가능), nx, ny는 필수
# +999 이상, -999 이하 값은 결측치
# 단기예보 - BaseTime : 0200, 0500, 0800, 1100, 1400, 1700, 2000, 2300 (각 시간 10분 뒤부터 제공)
# >> POP(강수확률, %), PTY(강수형태), PCP(1시간 강수량, 1mm), REH(습도, %), SNO(1시간 신적설, 1cm), SKY(하늘상태), TMP(1시간 기온), TMN(일 최저기온), TMX(일 최고기온), UUU(동서 풍속), VVV(남북풍속), WAV(파고), VEC(풍향), WSD(풍속)
# 초단기실황 : T1H(기온), RN1(1시간 강수량), UUU, VVV, REH, PTY, VEC(풍향, deg), WSD(풍속, m/s)
# 초단기예보 : T1H, RN1, SKY, UUU, VVV, REH, PTY, LGH(낙뢰, KA), VEC, WSD
# >> 매시간 30분 생성, 10분마다 최신정보 업데이트(기온, 습도, 바람 등)

# 단기예보 = getVilageFcst
# 초단기예보 = getVilageFcst
# 초단기실황 = getUltraSrtNcst

service = "getUltraSrtNcst"
url = f"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst"

params = {
    "dataType":"json",
    "base_date":"20240606",
    "base_time":"1200",
    "nx":"55",
    "ny":"127"
    }

res = requests.get(url, params=params)
data = res.json()['response']['body']['items']['item']
df = pd.DataFrame(data).head()
print(df.columns)
df

"""5-2) 부산테마여행정보 API"""

# 부산테마여행 국문정보 / param - UC_SEQ : 콘텐츠 ID / response - ITEMCNTNTS=상세내용
service = "getRecommendedKr" # 영문정보 : getRecommendedEn , 일문정보 : getRecommendedJa, 중문간체정보 : getRecommendedZhs, 중문번체정보 : getRecommendedZht
url = f"http://apis.data.go.kr/6260000/RecommendedService/{service}"

params = {
    "resultType":"JSON"
    }

res = requests.get(url, params=params)
data = res.json()["getRecommendedKr"]["item"]
df = pd.DataFrame(data).head()
print(df.columns)
df

"""5-3) 부산관광공사 : 부산 음식테마거리"""

https://www.data.go.kr/data/15096646/openapi.do

"""5-4) 부산버스정보시스템"""

부산버스정보시스템

"""5-5) 부산광역시_연극 목록, 부산광역시_뮤지컬 목록 서비스, 부산광역시_콘서트 목록 서비스, 부산광역시_전시 목록 서비스"""



"""5-6) 부산광역시_부산맛집정보 서비스"""



"""5-7) 부산광역시_종합병원 현황"""



"""5-8) 부산광역시_공영주차장 정보 조회"""



"""5-9) 산광역시_부산쇼핑정보 서비스"""



"""5-10) 부산광역시_해수욕장 수질 정보"""

